# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=checklist
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Pushkin@144
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    command: >
      sh -c "while ! nc -z db 5432; do
               echo 'Waiting for database...';
               sleep 1;
             done;
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 cl_back.wsgi:application"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - SECRET_KEY=ewtc7^l*f3zku6kx*0s(@vea4(1)o+xc+!k=tcm=e@pawcr%ld
      - DEBUG=False
      - ENGINE=django.db.backends.postgresql
      - NAME=checklist
      - USER=admin
      - PASSWORD=Pushkin@144
      - HOST=db
      - PORT=5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # Add HTTPS port
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - media_volume:/var/www/media
    depends_on:
      - backend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
